summary(Datos)
class(Datos$especie)
plot(Datos$LongSepalo, Datos$AnchoSepalo, col=Datos$especie)
pairs(Datos[,2:5], pch=as.numeric(Datos$especie))
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del S?palo")
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del Sepalo")
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del Sepalo", c=Datos$especie)
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del Sepalo", c=as.numeric(Datos$especie))
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del Sepalo", c=c(as.numeric(Datos$especie)))
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del Sepalo")
plot(Datos$LongSepalo~Datos$especie, main="Longitud del sepalo por especie")
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del Sepalo")
plot(Datos$LongSepalo, Datos$AnchoSepalo, col=Datos$especie)
pairs(Datos[,2:5], pch=as.numeric(Datos$especie))
ggpairs(Datos[,2:5])
library(GGally)
ggpairs(Datos[,2:5])
cor(Datos[,2:5])
Datos[,2:5]
Datos[,2:4]
cor(Datos[,2:4])
hist(Datos$LongSepalo, ylab="Frecuencia", xlab="Longitud del Sepalo")
plot(Datos$LongSepalo~Datos$especie, main="Longitud del sepalo por especie")
barplot(tapply(Datos$LongSepalo,Datos$especie,mean), main="Longitud del sepalo por especie")
# modificar breaks
hist(Datos$LongSepalo, main="Histograma",ylab="Frecuencia", xlab="Longitud del S?palo", breaks=7)
# modificar breaks
hist(Datos$LongSepalo, main="Histograma",ylab="Frecuencia", xlab="Longitud del S?palo", breaks=8)
# modificar breaks
hist(Datos$LongSepalo, main="Histograma",ylab="Frecuencia", xlab="Longitud del S?palo", breaks=10)
# modificar breaks
hist(Datos$LongSepalo, main="Histograma",ylab="Frecuencia", xlab="Longitud del S?palo", breaks=12)
# modificar breaks
hist(Datos$LongSepalo, main="Histograma",ylab="Frecuencia", xlab="Longitud del S?palo", breaks=16)
plot(density(Datos$LongSepalo), main="Densidad de LongSepalo")
# multiples subplots
# windows() # comando opcional si quiere el grafico en una ventana externa
par(mfrow=c(2,2))
hist(Datos$LongSepalo)
hist(Datos$LongPetalo)
hist(Datos$AnchoSepalo)
hist(Datos$AnchoPetalo)
# boxplot - datos atipicos
par(mfrow=c(1,1)) # seteo nuevamente la ventana
boxplot(Datos[2:5])
Datos[3]
colnames(Datos[3])
# boxplot - comparacion variables entre especies
# windows()
par(mfrow=c(2,2))
plot(Datos$LongSepalo~Datos$especie)
plot(Datos$LongPetalo~Datos$especie)
plot(Datos$AnchoPetalo~Datos$especie)
plot(Datos$AnchoSepalo~Datos$especie)
par(mfrow=c(1,1)) # reestablece
# png
png("myplot2.png", width= 15, height= 10, units= "cm", res = 90)   # myplot2 nombre del grafico
plot(Datos$LongPetalo,Datos$LongSepalo,
col=Datos$especie,
ylab="Longitud del S?palo (cm)",
xlab="Longitud del P?talo (cm)")
dev.off()
# tiff
tiff("myplot2.tiff", width= 15, height= 10, units= "cm", res = 90)
plot(Datos$LongPetalo,Datos$LongSepalo,
col=Datos$especie,
ylab="Longitud del S?palo (cm)",
xlab="Longitud del P?talo (cm)")
dev.off()
# pdf
pdf("myplot2.pdf", width= 7, height= 8, paper="special")
# ancho y alto en pulgadas de la region para graficar
# paper "special", setea el tama?o de la figura al del ancho y largo del grafico
# alternativas paper "a4", "letter" etc
plot(Datos$LongPetalo,Datos$LongSepalo,
col=Datos$especie,
ylab="Longitud del S?palo (cm)",
xlab="Longitud del P?talo (cm)")
dev.off()
ggplot(data = Datos) +
geom_point(mapping =  aes(LongSepalo, AnchoPetalo),  color = "black")  +
geom_smooth(mapping = aes(LongSepalo, AnchoPetalo), color = "red")
ggplot(data = Datos, mapping =  aes(LongSepalo, AnchoPetalo)) +
geom_point(color = "black")  +
geom_smooth(color = "red")
ggplot(Datos, aes(LongSepalo, AnchoPetalo)) +
geom_point(color = "black")  +
geom_smooth(color = "red")
ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie)) + theme(legend.title = element_blank())
ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie))# + theme(legend.title = element_blank())
ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie)) + theme(legend.title = element_blank())
ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
theme_classic() +
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie)) + theme(legend.title = element_blank())
grafico_b <- ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
theme_classic() +
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie)) + theme(legend.title = element_blank())
grafico_b
ggsave("miGrafico.png", grafico_b, width=10, height=5)
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=19, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(geom="point", shape=19, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = median, geom="point", shape=19, size=4,color="black")
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = median, geom="point", shape=19, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = median, geom="star", shape=19, size=4,color="black")
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = median, geom="line", shape=19, size=4,color="black")
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=19, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=17, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=15, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=14, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=1, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=3, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=2, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=4, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=5, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=6, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=7, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=8, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=9, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=10, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=11, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=12, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=13, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=14, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=22, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=50, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape="star", size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape="star2", size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=8, size=4,color="black")
box
box <- ggplot(Datos, aes(x=especie, y=AnchoSepalo))+
geom_boxplot()+
stat_summary(fun = mean, geom="point", shape=8, size=4,color="darkcyan")
box
# haciendo mas informativos los boxplot
box2 <- ggplot(Datos, aes(x=especie, y=LongSepalo)) +
geom_boxplot(aes(color=especie), color="black")+
theme_bw()+
geom_jitter(alpha=0.3, size=2,aes(color=especie), position = position_jitter(width = .2))+theme(legend.position="top", legend.text=element_text(size = 14),legend.title = element_text(size=16, face="bold")) +
ylab("Long Sepalo")+xlab("Especie")
box2
# barplot
# para frecuencias
barplot <- qplot(Datos$especie, geom="bar")
barplot
# barplot
# para frecuencias
barplot <- qqplot(Datos$especie, geom="bar")
barplot
# barplot
# para frecuencias
barplot <- qplot(Datos$especie, geom="bar")
barplot
barplot
# histograma
hist <- ggplot(Datos, aes(x=LongSepalo))+
geom_histogram(binwidth=.5, fill="blue", colour="black")+
theme_bw()
hist
# Graficos de dispersion
# Grafico exploratorio con suavizado por defecto (geom_smooth)
grafico1 <- ggplot(Datos, aes(x=LongSepalo, y=AnchoPetalo)) +
geom_point(size=3, color="blue", shape=19) +
geom_smooth()
grafico1
# setando geom_smooth
grafico2 <- ggplot(Datos, aes(x=LongSepalo, y=AnchoPetalo)) +
geom_point(size=3, color="red", shape=19) +
geom_smooth(method=lm, se=T, fullrange=F, size=0.5)
grafico2
# Primero hay que armar la matriz de correlacion
# Correlation matrix
corr_datos <- round(cor(Datos[1:4]), 2)
print(corr_datos)
ggcorrplot(corr_datos,
type = "lower",
method="square",
outline.color="black",
ggtheme=theme_bw)
# con la libreria corrplot
corrplot(corr_datos,
type = "upper",
method = "number")
# otro grafico, con mas opciones
corrplot.mixed(corr_datos,
lower.col = "black",
number.cex = .7)
grafico_a <- ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
theme_classic() +
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2)
grafico_a
# cambiando el color de los puntos y agragando leyenda
grafico_b <- ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
theme_classic() +
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie)) + theme(legend.title = element_blank())
grafico_b
# cambiando la forma de los puntos
grafico_c <- ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
theme_classic() +
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
scale_color_manual(values=c("red","green","orange"))+
geom_point(size=2, aes(shape=especie)) + theme(legend.title = element_blank())
grafico_c
# idem mas suavizado
grafico_d <- ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
theme_classic() +
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie)) + theme(legend.title = element_blank()) +
facet_grid(~ especie, scales="free_x") +
geom_smooth(method = "lm",se=T, color="red")
grafico_d
# idem mas suavizado
grafico_d <- ggplot(Datos,aes(LongSepalo,AnchoSepalo))+
theme_classic() +
labs(x="Longitud del Sepalo (cm)",y="Ancho del Sepalo (cm)") +
geom_point(size=2, aes(color=especie)) + theme(legend.title = element_blank()) #+
#  facet_grid(~ especie, scales="free_x") +
#  geom_smooth(method = "lm",se=T, color="red")
grafico_d
grid.arrange(grafico_a, grafico_b,
grafico_c, grafico_d,
ncol=2, nrow=2)
is.na(Datos)
sum(is.na(Datos))
is.na.data.frame(Datos)
which(is.na(Datos))
shape(Datos)
dim(Datos)
# Antes que nada veamos si hay algun comando u objeto almacenado en la memoria
rm(list=ls())
# Librerias que vamos a utilizar en este TP
library(dplyr)
library(ggplot2)
# Setear
setwd("C:/Users/snpre/Documents/Carrera/Biometria II/tp1 ")
datos <- iris # el dataset iris se encuentra disponible en R
colnames(datos) <- c("LongSepalo", "AnchoSepalo", "LongPetalo", "AnchoPetalo", "especie")
datos <- iris # el dataset iris se encuentra disponible en R
head(datos)
colnames(datos) <- c("LongSepalo", "AnchoSepalo", "LongPetalo", "AnchoPetalo", "especie")
head(datos)
str(datos)
names(datos)
nrow(datos)
ncol(datos)
dim(datos)
class(datos$especie)
class(datos$LongSepalo)
View(datos)
summary(datos)
datos %>%
group_by(especie) %>%
summarise_all(.funs = c(
media = mean
)
)
# datos resumen
resumen <- datos %>%
group_by(especie) %>%
summarise_all(.funs = c(
media = mean,
DE = sd
)
)
resuemn
resumen
tabla_frecuencias <- table(datos$especie, useNA = "always")
tabla_frecuencias
# frecuencias relativas
prop.table(tabla_frecuencias)
m1 <- lm(LongSepalo~especie, data=datos)
# Descomp de la SC ("tabla de ANOVA") del modelo
anova(m1)
# comparaciones
# como analizarian la magnitud del efecto?
library(emmeans)
# Descomp de la SC ("tabla de ANOVA") del modelo
anova(m1)
par(mfrow = c(1, 2))
plot(pre, re, xlab="Predichos", ylab="Residuos estandarizados",main="Graf de dispersion de RE vs PRED" )
abline(0,0, col="red")
qqPlot(e, main = "QQ Plot residuos")
# Librerias que vamos a utilizar en este TP
library(car)
par(mfrow = c(1, 2))
plot(pre, re, xlab="Predichos", ylab="Residuos estandarizados",main="Graf de dispersion de RE vs PRED" )
e<-residuals(m1) # residuos
re<-rstandard(m1) # residuos estandarizados
pre<-predict(m1) # predichos
par(mfrow = c(1, 2))
plot(pre, re, xlab="Predichos", ylab="Residuos estandarizados",main="Graf de dispersion de RE vs PRED" )
abline(0,0, col="red")
qqPlot(e, main = "QQ Plot residuos")
par(mfrow = c(1, 1))
shapiro.test(e) # pv = 0.2808
leveneTest(datos$LongSepalo, datos$especie)
# comparaciones
# como analizarian la magnitud del efecto?
library(emmeans)
# seteo de opciones de salida (opcional, modificando los argumentos T / F puede ver como se modifican las salidas del emmeans)
options(emmeans= list(emmeans = list(infer = c(TRUE, FALSE)),contrast = list(infer = c(TRUE, TRUE))))
# comparaciones
comp <- emmeans(m1, pairwise ~ especie)
comp
plot(comp, comparisons = TRUE)
resumen_modelo <-as.data.frame(comp$emmeans)
# exploramos el objeto resumen_modelo
resumen_modelo  # emmeans es la media estimada
# Plot
library(ggplot2)
ggplot(resumen_modelo, aes(x=especie, y=emmean)) +
labs(x="especie") + labs(y="longitud sepalo") +
geom_errorbar(aes(ymin=emmean-SE, ymax=emmean+SE), color="blue", width=0.2)+
geom_point(shape=1, size=2, color="blue") +
ylim(0,8)+
ggtitle("Comparaci?n de long de sepalo entre especies", "Media ? Error est?ndar") +
annotate("text", x = c(1,2,3), y=c(6,7,8), label = c("A", "B", "C"))
library(ggeffects)
model_plot <-ggpredict(m1,
terms = c("especie"),
interval = "confidence")
model_plot
grafico <- plot(model_plot, add.data = F) # para agregar los puntos observados add.data = T
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))
grafico <- plot(model_plot, add.data = T) # para agregar los puntos observados add.data = T
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))
grafico <- plot(model_plot, add.data = F) # para agregar los puntos observados add.data = T
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))+ geom_jitter(mapping = especie)
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))+ geom_jitter(aes(colour=especie))
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))+ geom_jitter(aes(color=especie))
grafico <- plot(model_plot, add.data = F) # para agregar los puntos observados add.data = T
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))+ geom_jitter()
grafico <- plot(model_plot, add.data = T) # para agregar los puntos observados add.data = T
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))+ geom_jitter()
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))+ geom_jitter()
grafico <- plot(model_plot, add.data = F) # para agregar los puntos observados add.data = T
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C"))+
View(datos)
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C")) + geom_jitter(data = datos, aes(x = especie, y = LongSepalo), width = 0.1, height = 0, color = "blue", size = 1.5, alpha = 0.6)
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C")) + geom_jitter(data = datos, aes(x = as.numeric(especie), y = LongSepalo), width = 0.1, height = 0, color = "blue", size = 1.5, alpha = 0.6)
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C")) + geom_jitter(data = datos, aes(x = as.numeric(especie), y = LongSepalo), )#width = 0.1, height = 0, color = "blue", size = 1.5, alpha = 0.6)
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C")) + geom_jitter(data = datos, aes(x = as.numeric(especie), y = LongSepalo), width = 0.1, height = 0, color = "blue", size = 1.5, alpha = 0.6)
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C")) + geom_jitter(data = datos, aes(x = as.numeric(especie), y = LongSepalo), width = 0.3, height = 0, color = "blue", size = 1.5, alpha = 0.6)
grafico + ggtitle("valores predichos") + labs(y="Long sepalo (mm))") +
annotate("text", x = c(1,2,3), y=c(5.3,6.3,7), label = c("A", "B", "C")) + geom_jitter(data = datos, aes(x = as.numeric(especie), y = LongSepalo), width = 0.2, height = 0, color = "blue", size = 1.5, alpha = 0.6)
anova(m1)
plot(comp, comparisons = TRUE)
comp
rm(list=ls())
head(data)
setwd("C:/Users/snpre/Documents/Carrera/Biometria II/tp1 ")
data<-read.csv("terapiaEA.csv")
head(data)
str(data)
data$amiloide<-as.numeric(data$amiloide)
str(data)
data<-read.csv("terapiaEA.csv")
str(data)
data<-read.csv("terapiaEA.csv", dec=",")
head(data)
str(data)
#1. Indique la cantidad de réplicas y el tipo de variables involucradas.
levels(data$tiempo)
View(data)
ggplot(data=data, aes(x=tiempo, y=amiloide))+ geom_point()+ geom_smooth(method = "lm")
ggplot(data=data, aes(x=tiempo, y=amiloide))+ geom_point(color="navy")+ geom_smooth(method = "lm", color="darkcyan")
library(car)
library(dplyr)
library(ggplot2)
# Tablas resumen
resumen <- data %>%
group_by(tiempo) %>%
summarise_all(.funs = c(
media = mean,
DE = sd
)
)
resumen
View(data)
# Tablas resumen
resumen <- data[2:3,] %>%
group_by(tiempo) %>%
summarise_all(.funs = c(
media = mean,
DE = sd
)
)
resumen
# Tablas resumen
resumen <- data[2:3] %>%
group_by(tiempo) %>%
summarise_all(.funs = c(
media = mean,
DE = sd
)
)
resumen
m1<- lm(amiloide~tiempo, data = data)
summary(m1)
# La estimacion de la pendiente de nuestro modelo es -30.94. Es decir, por cada aumento unitario del tiempo la maa amiloide beta promedio en el cerebro disminuye 80.94 ng.
confint(m1)
summary(m1)
summary(datos)
summary(data)
